{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { SCENARIOS } from \"../utils/scenarioConstants\";\nexport default function useChatScenario() {\n  _s();\n  const [chatHistory, setChatHistory] = useState([{\n    from: \"bot\",\n    message: SCENARIOS.INIT.message,\n    options: SCENARIOS.INIT.options\n  }]);\n  const [currentStep, setCurrentStep] = useState(\"INIT\");\n\n  // 유틸: 메시지 추가\n  const appendMessage = msg => {\n    setChatHistory(prev => [...prev, msg]);\n  };\n\n  // 유저 응답 처리\n  const handleUserInput = userMessage => {\n    appendMessage({\n      from: \"user\",\n      message: userMessage\n    });\n    switch (currentStep) {\n      case \"INIT\":\n        if (userMessage === \"서류 제출\") {\n          setCurrentStep(\"SELECT_DEPT\");\n          appendMessage({\n            from: \"bot\",\n            message: SCENARIOS.SELECT_DEPT.message,\n            options: SCENARIOS.SELECT_DEPT.options\n          });\n        } else if (userMessage === \"서류 제출 현황\") {\n          setCurrentStep(\"CHECK_STATUS\");\n          appendMessage({\n            from: \"bot\",\n            message: SCENARIOS.CHECK_STATUS.message,\n            options: SCENARIOS.CHECK_STATUS.options,\n            showList: true\n          });\n        }\n        break;\n      case \"SELECT_DEPT\":\n        setCurrentStep(\"SELECT_TYPE\");\n        appendMessage({\n          from: \"bot\",\n          message: SCENARIOS.SELECT_TYPE.message,\n          options: SCENARIOS.SELECT_TYPE.options\n        });\n        break;\n      case \"SELECT_TYPE\":\n        setCurrentStep(\"CHECK_DEADLINE\");\n        appendMessage({\n          from: \"bot\",\n          message: SCENARIOS.CHECK_DEADLINE.message\n        });\n\n        // 예시: 제출 기한 검사 (하드코딩 예제)\n        const isDeadlineValid = true;\n        setTimeout(() => {\n          if (isDeadlineValid) {\n            setCurrentStep(\"FILE_UPLOAD_PROMPT\");\n            appendMessage({\n              from: \"bot\",\n              message: SCENARIOS.FILE_UPLOAD_PROMPT.message,\n              uploadEnabled: true\n            });\n          } else {\n            setCurrentStep(\"DEADLINE_EXPIRED\");\n            appendMessage(SCENARIOS.DEADLINE_EXPIRED(\"2025-06-30\"));\n          }\n        }, 1000);\n        break;\n      case \"FEEDBACK\":\n        if (userMessage === \"파일 수정 후 다시 제출\") {\n          setCurrentStep(\"FILE_RESUBMIT_PROMPT\");\n          appendMessage({\n            from: \"bot\",\n            message: SCENARIOS.FILE_RESUBMIT_PROMPT.message,\n            uploadEnabled: true,\n            options: SCENARIOS.FILE_RESUBMIT_PROMPT.options\n          });\n        }\n        break;\n      case \"DEADLINE_EXPIRED\":\n        if (userMessage === \"다른 서류 제출하기\") {\n          setCurrentStep(\"SELECT_DEPT\");\n          appendMessage({\n            from: \"bot\",\n            message: SCENARIOS.SELECT_DEPT.message,\n            options: SCENARIOS.SELECT_DEPT.options\n          });\n        } else {\n          reset();\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  // 파일 업로드 처리\n  const handleFileUpload = file => {\n    appendMessage({\n      from: \"user\",\n      message: `${file.name} 파일을 업로드했습니다.`\n    });\n    setCurrentStep(\"FILE_UPLOADED\");\n    appendMessage({\n      from: \"bot\",\n      message: SCENARIOS.FILE_UPLOADED.message\n    });\n\n    // GPT 기반 검수 예시 시뮬레이션\n    setTimeout(() => {\n      const missingItems = [\"전공 관련 경험\", \"가계곤란 사유\", \"가족관계증명서\"];\n      setCurrentStep(\"FEEDBACK\");\n      appendMessage({\n        from: \"bot\",\n        ...SCENARIOS.FEEDBACK(missingItems)\n      });\n    }, 1500);\n  };\n  const reset = () => {\n    setChatHistory([{\n      from: \"bot\",\n      message: SCENARIOS.INIT.message,\n      options: SCENARIOS.INIT.options\n    }]);\n    setCurrentStep(\"INIT\");\n  };\n  return {\n    chatHistory,\n    currentStep,\n    handleUserInput,\n    handleFileUpload,\n    reset\n  };\n}\n_s(useChatScenario, \"9wrCZ6WD+g6VQd4Fx4CSIWxd7ww=\");","map":{"version":3,"names":["useState","SCENARIOS","useChatScenario","_s","chatHistory","setChatHistory","from","message","INIT","options","currentStep","setCurrentStep","appendMessage","msg","prev","handleUserInput","userMessage","SELECT_DEPT","CHECK_STATUS","showList","SELECT_TYPE","CHECK_DEADLINE","isDeadlineValid","setTimeout","FILE_UPLOAD_PROMPT","uploadEnabled","DEADLINE_EXPIRED","FILE_RESUBMIT_PROMPT","reset","handleFileUpload","file","name","FILE_UPLOADED","missingItems","FEEDBACK"],"sources":["C:/CnuAiDocReviewer/cnu-doc-ai/src/hooks/useChatScenario.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { SCENARIOS } from \"../utils/scenarioConstants\";\r\n\r\nexport default function useChatScenario() {\r\n    const [chatHistory, setChatHistory] = useState([\r\n        { from: \"bot\", message: SCENARIOS.INIT.message, options: SCENARIOS.INIT.options },\r\n    ]);\r\n    const [currentStep, setCurrentStep] = useState(\"INIT\");\r\n\r\n    // 유틸: 메시지 추가\r\n    const appendMessage = (msg) => {\r\n        setChatHistory((prev) => [...prev, msg]);\r\n    };\r\n\r\n    // 유저 응답 처리\r\n    const handleUserInput = (userMessage) => {\r\n        appendMessage({ from: \"user\", message: userMessage });\r\n\r\n        switch (currentStep) {\r\n            case \"INIT\":\r\n                if (userMessage === \"서류 제출\") {\r\n                    setCurrentStep(\"SELECT_DEPT\");\r\n                    appendMessage({\r\n                        from: \"bot\",\r\n                        message: SCENARIOS.SELECT_DEPT.message,\r\n                        options: SCENARIOS.SELECT_DEPT.options,\r\n                    });\r\n                } else if (userMessage === \"서류 제출 현황\") {\r\n                    setCurrentStep(\"CHECK_STATUS\");\r\n                    appendMessage({\r\n                        from: \"bot\",\r\n                        message: SCENARIOS.CHECK_STATUS.message,\r\n                        options: SCENARIOS.CHECK_STATUS.options,\r\n                        showList: true,\r\n                    });\r\n                }\r\n                break;\r\n\r\n            case \"SELECT_DEPT\":\r\n                setCurrentStep(\"SELECT_TYPE\");\r\n                appendMessage({\r\n                    from: \"bot\",\r\n                    message: SCENARIOS.SELECT_TYPE.message,\r\n                    options: SCENARIOS.SELECT_TYPE.options,\r\n                });\r\n                break;\r\n\r\n            case \"SELECT_TYPE\":\r\n                setCurrentStep(\"CHECK_DEADLINE\");\r\n                appendMessage({ from: \"bot\", message: SCENARIOS.CHECK_DEADLINE.message });\r\n\r\n                // 예시: 제출 기한 검사 (하드코딩 예제)\r\n                const isDeadlineValid = true;\r\n                setTimeout(() => {\r\n                    if (isDeadlineValid) {\r\n                        setCurrentStep(\"FILE_UPLOAD_PROMPT\");\r\n                        appendMessage({ from: \"bot\", message: SCENARIOS.FILE_UPLOAD_PROMPT.message, uploadEnabled: true });\r\n                    } else {\r\n                        setCurrentStep(\"DEADLINE_EXPIRED\");\r\n                        appendMessage(SCENARIOS.DEADLINE_EXPIRED(\"2025-06-30\"));\r\n                    }\r\n                }, 1000);\r\n                break;\r\n\r\n            case \"FEEDBACK\":\r\n                if (userMessage === \"파일 수정 후 다시 제출\") {\r\n                    setCurrentStep(\"FILE_RESUBMIT_PROMPT\");\r\n                    appendMessage({ from: \"bot\", message: SCENARIOS.FILE_RESUBMIT_PROMPT.message, uploadEnabled: true, options: SCENARIOS.FILE_RESUBMIT_PROMPT.options });\r\n                }\r\n                break;\r\n\r\n            case \"DEADLINE_EXPIRED\":\r\n                if (userMessage === \"다른 서류 제출하기\") {\r\n                    setCurrentStep(\"SELECT_DEPT\");\r\n                    appendMessage({\r\n                        from: \"bot\",\r\n                        message: SCENARIOS.SELECT_DEPT.message,\r\n                        options: SCENARIOS.SELECT_DEPT.options,\r\n                    });\r\n                } else {\r\n                    reset();\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    // 파일 업로드 처리\r\n    const handleFileUpload = (file) => {\r\n        appendMessage({ from: \"user\", message: `${file.name} 파일을 업로드했습니다.` });\r\n\r\n        setCurrentStep(\"FILE_UPLOADED\");\r\n        appendMessage({ from: \"bot\", message: SCENARIOS.FILE_UPLOADED.message });\r\n\r\n        // GPT 기반 검수 예시 시뮬레이션\r\n        setTimeout(() => {\r\n            const missingItems = [\"전공 관련 경험\", \"가계곤란 사유\", \"가족관계증명서\"];\r\n            setCurrentStep(\"FEEDBACK\");\r\n            appendMessage({\r\n                from: \"bot\",\r\n                ...SCENARIOS.FEEDBACK(missingItems),\r\n            });\r\n        }, 1500);\r\n    };\r\n    const reset = () => {\r\n        setChatHistory([\r\n            { from: \"bot\", message: SCENARIOS.INIT.message, options: SCENARIOS.INIT.options },\r\n        ]);\r\n        setCurrentStep(\"INIT\");\r\n    };\r\n\r\n    return {\r\n        chatHistory,\r\n        currentStep,\r\n        handleUserInput,\r\n        handleFileUpload,\r\n        reset,\r\n    };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}