{"ast":null,"code":"var _jsxFileName = \"C:\\\\CnuAiDocReviewer\\\\cnu-doc-ai\\\\src\\\\components\\\\Chatbot\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styles from './Chatbot.module.css';\nimport ChatBubble from './ChatBubble';\nimport FileUploader from './FileUploader';\nimport useChatScenario from '../../hooks/useChatScenario';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = ({\n  onClose\n}) => {\n  _s();\n  const {\n    chatHistory,\n    handleUserInput,\n    handleFileUpload\n  } = useChatScenario();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatbotPanel,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chatHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"CNU \\uCC57\\uBD07\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.closeButton,\n        onClick: onClose,\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chatBody,\n      children: chatHistory.map((chat, idx) => {\n        // 첫 메시지이고 bot + INIT일 경우 → 마스코트 포함 greeting UI 사용\n        if (idx === 0 && chat.from === 'bot') {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.botGreetingBox,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/chat_mascot.png\",\n              alt: \"\\uCC57\\uBD07 \\uB9C8\\uC2A4\\uCF54\\uD2B8\",\n              className: styles.botMascot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.botMessageBox,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.greetingText,\n                children: chat.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 37\n              }, this), chat.options && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.optionsContainer,\n                children: chat.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.optionButton,\n                  onClick: () => handleUserInput(opt),\n                  children: opt\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 33\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this);\n        }\n\n        // 일반 메시지 (텍스트만 또는 버튼/파일 포함)\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ChatBubble, {\n            sender: chat.from,\n            message: chat.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), chat.options && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.optionsContainer,\n            children: chat.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.optionButton,\n              onClick: () => handleUserInput(opt),\n              children: opt\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), chat.uploadEnabled && /*#__PURE__*/_jsxDEV(FileUploader, {\n            onUpload: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chatInput,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"BOBBqWoIn20N8fE01h7bXKG/Pk8=\", false, function () {\n  return [useChatScenario];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","styles","ChatBubble","FileUploader","useChatScenario","jsxDEV","_jsxDEV","Chatbot","onClose","_s","chatHistory","handleUserInput","handleFileUpload","className","chatbotPanel","children","chatHeader","fileName","_jsxFileName","lineNumber","columnNumber","closeButton","onClick","chatBody","map","chat","idx","from","botGreetingBox","src","alt","botMascot","botMessageBox","greetingText","message","options","optionsContainer","opt","i","optionButton","sender","uploadEnabled","onUpload","chatInput","type","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/CnuAiDocReviewer/cnu-doc-ai/src/components/Chatbot/Chatbot.jsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './Chatbot.module.css';\r\nimport ChatBubble from './ChatBubble';\r\nimport FileUploader from './FileUploader';\r\nimport useChatScenario from '../../hooks/useChatScenario';\r\n\r\nconst Chatbot = ({ onClose }) => {\r\n    const {\r\n        chatHistory,\r\n        handleUserInput,\r\n        handleFileUpload,\r\n    } = useChatScenario();\r\n\r\n    return (\r\n        <div className={styles.chatbotPanel}>\r\n            <div className={styles.chatHeader}>\r\n                <div>CNU 챗봇</div>\r\n                <button className={styles.closeButton} onClick={onClose}>✕</button>\r\n            </div>\r\n\r\n            <div className={styles.chatBody}>\r\n                {chatHistory.map((chat, idx) => {\r\n                    // 첫 메시지이고 bot + INIT일 경우 → 마스코트 포함 greeting UI 사용\r\n                    if (idx === 0 && chat.from === 'bot') {\r\n                        return (\r\n                            <div className={styles.botGreetingBox} key={idx}>\r\n                                <img src=\"/images/chat_mascot.png\" alt=\"챗봇 마스코트\" className={styles.botMascot} />\r\n                                <div className={styles.botMessageBox}>\r\n                                    <div className={styles.greetingText}>\r\n                                        {chat.message}\r\n                                    </div>\r\n                                    {chat.options && (\r\n                                        <div className={styles.optionsContainer}>\r\n                                            {chat.options.map((opt, i) => (\r\n                                                <button\r\n                                                    key={i}\r\n                                                    className={styles.optionButton}\r\n                                                    onClick={() => handleUserInput(opt)}\r\n                                                >\r\n                                                    {opt}\r\n                                                </button>\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }\r\n\r\n                    // 일반 메시지 (텍스트만 또는 버튼/파일 포함)\r\n                    return (\r\n                        <div key={idx}>\r\n                            <ChatBubble sender={chat.from} message={chat.message} />\r\n                            {chat.options && (\r\n                                <div className={styles.optionsContainer}>\r\n                                    {chat.options.map((opt, i) => (\r\n                                        <button\r\n                                            key={i}\r\n                                            className={styles.optionButton}\r\n                                            onClick={() => handleUserInput(opt)}\r\n                                        >\r\n                                            {opt}\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                            {chat.uploadEnabled && (\r\n                                <FileUploader onUpload={handleFileUpload} />\r\n                            )}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <div className={styles.chatInput}>\r\n                <input type=\"text\" placeholder=\"메시지를 입력하세요.\" disabled />\r\n                <button disabled>전송</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}